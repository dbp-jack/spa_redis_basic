SADD의 결과에 따라 명령어를 실행하거나 말거나
0은 스킵
1일 경우? Sorted Set에 넣어주자

2. 내 블로그 글 별 조회수를 Redis로 확인하고 싶다.
    1. 블로그 URL의 PATH는 `/articles/{id}` 형식이다.
    2. 로그인 여부와 상관없이 새로고침 될때마다 조회수가 하나 증가한다.
    3. 이를 관리하기 위해 적당한 데이터 타입을 선정하고,
    4. 사용자가 임의의 페이지에 접속할 때 실행될 명령을 작성해보자.
3. 블로그에 로그인한 사람들의 조회수와 가장 많은 조회수를 기록한 글을 Redis로 확인하고 싶다.
    1. 블로그 URL의 PATH는 `/articles/{id}` 형식이다.
    2. 로그인 한 사람들의 계정은 영문으로만 이뤄져 있다.
    3. 이를 관리하기 위해 적당한 데이터 타입을 선정하고,
    4. 사용자가 임의의 페이지에 접속할 때 실행될 명령을 작성해보자.
    5. 만약 상황에 따라 다른 명령이 실행되어야 한다면, 주석으로 추가해보자.


1. 주문 ID, 판매 물품, 갯수, 총액, 결제 여부에 대한 데이터를 지정하기 위한 `ItemOrder` 클래스를 `RedisHash`로 만들고,
    1. 주문 ID - String
    2. 판매 물품 - String
    3. 갯수 - Integer
    4. 총액 - Long
    5. 주문 상태 - String
2. 주문에 대한 CRUD를 진행하는 기능을 만들어보자.
    1. `ItemOrder`의 속성값들을 ID를 제외하고 클라이언트에서 전달해준다.
    2. 성공하면 저장된 `ItemOrder`를 사용자에게 응답해준다.
- 해설 코드
    [practice-1.zip](https://prod-files-secure.s3.us-west-2.amazonaws.com/83c75a39-3aba-4ba4-a792-7aefe4b07895/808f7f7e-0720-4f39-843f-38da03171eba/practice-1.zip)

실습2 레디스 레포지토리 활용하는 방법을 알려준다.

새로운 Spring Boot 프로젝트를 만들어 2번 실습의 기능을 실제로 만들어보자.
1. 실제 Entity 등은 만들지 않고, Redis에 데이터만 저장해보자.
- Redisst
문자열은 저장된 데이터가 정수라면
-- INCR, DECR 등으로 값을 쉽게 조정할 수 있다.
- 추가로 존재하지 않는 데이터에 대해서 실행할 경우 0으로 초기화된다.
INCR articles: {id}
-- 만약 날짜가 바뀔때 데이터를 저장하고 싶다면,
-- Key를 articles:{id}:today 등으로 만들고
INCR articles: {id}:today
-- 날짜가 바뀌는 시점에 RENAME으로 해당 날자를 기록하면 된다.
RENAME articles: fid:today articles: fid}:20XX-XX-XX

레디스에다사 캐시를 저장할 수 있다. 빠르게 데이터를 읽고 쓰기 위해서 존재하는거니깐,
 인메모리 데이터베이스가 파일 시스템을 사용하는 관게형 데이터베이스보다 빠를거다라고 예측할 수 있다.